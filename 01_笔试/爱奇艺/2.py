'''
格式化字符串
时间限制： 3000MS
内存限制： 589824KB
题目描述：
撰写电子邮件很有趣，但是不幸的是，它们看起来并不好看，主要是因为并非所有行的长度都相同。在此问题中，您的任务是编写一个电子邮件格式化程序，以重新格式化电子邮件的一段（例如，通过插入空格），以便随后所有行的长度相同（甚至每个段落的最后一行）。执行此任务的最简单方法是在太短的行中的单词之间插入更多空格。但这不是最好的方法。考虑以下示例：

****************************

This is the example you are

actually considering.

假设我们要获得与星星行一样长的宽度。然后，只需插入空格，我们将得到

****************************

This is the example you  are

actually        considering.

但是，由于第二行之间存在较大差距，因此这看起来很奇怪。通过将``are''一词从第一行移至第二行，我们得到了更好的结果：

****************************

This  is  the  example   you

are  actually   considering.

我们定义：单词间所插入的空格是坏点，1个坏点的loss为1，插入n个坏点的loss为（n-1）^ 2，我们的目标是实现所有坏点的总loss的最小化。例如，第一个示例的坏点loss为1 + 7 ^ 2 = 50，而第二个示例的坏点loss仅为1 + 1 + 1 + 4 + 1 + 4 =12。

注意：

在输出中，每一行都必须有开始单词和结束单词（也就是说，行的开头或结尾不能有空格）。

如果一行仅包含一个单词，则该单词应放在该行的开头。

如果该行的长度比预想中的要短，则将该行分配为500。



输入描述
输入包含由几个段落组成的文本。每个段落前面都有一行，该行包含一个整数n，即该段落的所需宽度（1 <= n <= 80）。

段落由一行或多行组成，每行包含一个或多个单词。单词由ASCII码在33到126之间（含33和126）的字符组成，并用空格分隔（可能不止一个）。
单词长度不得超过该段落的期望宽度。一段的所有单词的总长度不得超过10000个字符。

每个段落均以一个空白行结尾。输入文件中的段落数没有限制。

输入文件将以n = 0开头的段落描述终止。

输出描述
输出相同的文本，其格式如上所述（单独处理每个段落）。

如果有几种方法可以设置具有相同不良性的段落格式，请使用以下算法选择要输出的段落：

令A和B为两种解决方案。在A和B中找到长度不相同的第一个间隙。不要输出该间隙较大的解决方案。

在每个段落之后输出空白行。


样例输入
28
This is the example you are
actually considering.
样例输出
This  is  the  example   you
are  actually   considering.
'''
while 1:
    n = int(input())
    if n == 0: break
    rows = []
    t = input()
    while t != "":
        rows.append(t)
        t = input()
    print(rows)
    print("a  b   d d".split(" "))
    for r in rows:
        if len(r) == n:
            print(r)
        else:
            x = n - len(r)
            idx = r.index(" ")
            print(r[ : idx] + " " * x + r[idx + 1 : ])
    print("")
